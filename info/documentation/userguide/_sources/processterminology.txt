
Terminology for nodes, cores, processes, and threads
===============================================================

SimFactory uses some terminology for nodes, cores, processes, and
threads. These terms are used somewhat inconsistently in the wild, and
marketing changes their definitions every few years. Below we define
the terms unambiguously. It is unfortunate that SimFactory's variable
names and command line options are somewhat outdated and don't
correspond to modern terminology any more.

Definitions
-----------

- A *machine* consists of a certain number of *nodes*, each of which
  consists of a certain number of *cores*.

- A job requests (from the queuing system) a certain number of nodes,
  and requests a certain number of cores on each node.

- The MDB entries [maxnodes], [minppn], and [maxppn] define how many
  nodes a job can request at most, and define the range of allowed
  values for cores-per-node.

- SimFactory starts a number of MPI *processes*, choosing how many MPI
  processes should be placed on every node. Each MPI process starts a
  certain number of OpenMP *threads*. The distribution of threads to
  cores is performed automatically by the operating system and usually
  cannot be influenced.

Note that nodes and cores are requested from the queuing system, while
processes and threads are started by SimFactory. These numbers may
differ, allowing under- and over-subscription.

Variables and command-line options
----------------------------------

SimFactory expands variables in files and uses certain command line
options. These variables and options have the following definitions:

===============   =============   ===================
Variable          Option          Definition
===============   =============   ===================
NODES                             nodes
PROCS             --procs         threads
PROCS_REQUESTED                   cores
PPN               --ppn           cores per node
PPN_USED          --ppn-used      threads per node
NUM_PROCS                         processes
NUM_THREADS       --num-threads   threads per process
===============   =============   ===================

Other important quantitites
---------------------------

processes per node

 = (NUM_PROCS + NODES - 1) / NODES

 = PPN_USED / NUM_THREADS

 = NODE_PROCS

Note that nodes and processes, or cores and threads may not be integer
multiples of each other. Results of divisions must be correctly
rounded.

Choice process
--------------

The user chooses the total number of threads (--procs) and the number
of threads per process (--num-threads). We then assume that we run
one thread per core, that we use all cores per node, and that we use
as few nodes as possible. This defines defaults for all other
quantities. The user can under- or over-subscribe cores by defining
how many threads per node (--ppn-used) to run. The number of nodes is
always chosen automatically.

The number of cores per node that can be requested from the queuing
system define a granularity. The number of threads that the user wants
to run may not fit. In this case, the last node may be used only
partially. Similarly, the number of threads per node may be arbitrary,
and may not be equal to (or an integer multiple of) the number of
cores per node.
